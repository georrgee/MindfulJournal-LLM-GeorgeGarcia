"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getBoundingClientRect_exports = {};
__export(getBoundingClientRect_exports, {
  getBoundingClientRect: () => getBoundingClientRect,
  getBoundingClientRectAsync: () => getBoundingClientRectAsync
});
module.exports = __toCommonJS(getBoundingClientRect_exports);
var getBoundingClientRect = function(node) {
  var _node_getBoundingClientRect;
  if (!(!node || node.nodeType !== 1))
    return (_node_getBoundingClientRect = node.getBoundingClientRect) === null || _node_getBoundingClientRect === void 0 ? void 0 : _node_getBoundingClientRect.call(node);
}, getBoundingClientRectAsync = function(element) {
  return new Promise(function(resolve) {
    var didFallback = !1;
    function fallbackToSync() {
      didFallback = !0, resolve(getBoundingClientRect(element));
    }
    var tm = setTimeout(fallbackToSync, 32), observer = new IntersectionObserver(function(entries, ob) {
      if (clearTimeout(tm), ob.disconnect(), !didFallback) {
        var _entries_;
        resolve((_entries_ = entries[0]) === null || _entries_ === void 0 ? void 0 : _entries_.boundingClientRect);
      }
    }, {
      threshold: 1e-4
    });
    observer.observe(element);
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getBoundingClientRect,
  getBoundingClientRectAsync
});
//# sourceMappingURL=getBoundingClientRect.js.map
